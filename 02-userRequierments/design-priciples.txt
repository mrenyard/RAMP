---------------------------------------------------------
            DESIGN PRINCIPLES FOR SVELTE
---------------------------------------------------------
enable rapid development of web applications so that
developers can consentrate on good data structure design,
user interface design and user experiance.

Clear seperation of form and function (control, model,
view (mark-up templates etc))

easy for web designers to have total control over output
(semantic HTML and semantic site structure)

easy for serverside developers to develop systems
independatly of front-end design (markup)

designed with consideration for modern ajax development
from the outset, while promoting the priciple of progressive
enhancment to implement ajax features.
i.e. still works with JS switched off.

use most up-to-date web standard for Core HTML fragments.

Core classes coded to best OOP practices

Keep the systems use simple by using self explanitary
method names, common api's and encapsolate everything.

local componets overide any core componets for easy
of customisation

---------------------------------------------------------
          SOME RULES OF THE WEB TO KEEP IN MIND
---------------------------------------------------------
1) There is ONLY ONE type of event in any web application.
    A HTTP request.

2) Every View (web fragment) ONLY has ONE parent.
    Semantics are inferred in both page markup
     and overall site structure.

3) Once created a resources address SHOULD rarely be abanded.

4) Every unique resource should have A unique address.
   - a. Do not break the back button
   - b. Frames are bad
   - c. AJAX usesed to load primary content is bad

5) An Autherisation Form (login), is NOT a resource.
    And therefore should NOT have its own address

6) Functional Enhancements (Javascript) are LAST element
   in the frount end technologiy stack, NOT the FIRST.
    Preceded firstly by Markup (HTML) and then Style (CSS)

---------------------------------------------------------

There are three types of semantics to consider within the
world wide web: Hierarchal, Ordered and Networked.

Hierarchal:
 - Page Markup
 - Site url structure (site maps)
Ordered:
 - Ordered from top to bottom within any Hierarchy
 -- Page content (first sibling - last sibling)
 -- Goolge search results
Networked:
 - HyperLinks from one resource to another
   (perticually between different sites)

----------------------------------------------------------
             WE SUPPORT THE PRINCIPLES OF:
----------------------------------------------------------
The Web Standards Project WaSP (http://www.webstandards.org/)

A Front End Engineer's Manifesto (http://f2em.com/)

