/**
 * layout.css
 *
 * Default CSS Manifest modified from Snook's
 * Scalable and Modular Architecture for CSS
 * http://smacss.com/book/
 */
/* ==============================================================================================
  LAYOUT  - How the page is divided into sections including headers, footers, sidebars...
         example: screen-width:1024/16px : @media only screen and (min-width: 64em) { }
  ============================================================================================ */

  
  :root {
    --block-spacing: .125rem;
    --hero-height: 100vw;
  } @media  screen and (min-width: 32rem) { /*512px*/
    :root { --block-spacing: .25rem; }
  } @media screen and (orientation: landscape) {
    :root { --hero-height: 75vh; }
  } @media  screen and (min-width: 45rem) { /*720px*/
    :root {
      --block-spacing: .5rem;
      --hero-height: 75vh;
    }
  } @media  screen and (min-width: 48rem) { /*768px*/
    :root { --block-spacing: 1rem; }
  }

  body {
    position: relative;
      display: grid;
      grid-template-columns:
        [full-start] var(--block-spacing)
          [app-start] 0
            [main] 1fr
          0 [app-end]
        var(--block-spacing) [full-end];
      grid-template-rows: auto;
      column-gap: var(--block-spacing);
    } @media  screen and (min-width: 42rem) { /*672px*/
    body {
      grid-template-columns:
        [full-start] var(--block-spacing)
          [app-start] auto
              [main-left] 20rem
              [main-right] 20rem
          auto [app-end]
        var(--block-spacing) [full-end];
    } 
  } @media screen and (min-width: 70rem) { /*1120px*/
    body {
      grid-template-columns:
      [full-start] var(--block-spacing)
          [app-start] auto
              [main-left] 20rem
              [main-right] 20rem
              [aside] 20rem
          auto [app-end]
        var(--block-spacing) [full-end];
    }    
  }

  body > *:not(a, nav, main, body > article) {
    display: grid;
    grid-template-columns: subgrid;
    padding: var(--block-spacing) 0;
  } body > header, body > footer {
    grid-area: full; grid-row: auto;
  } body > main {
    grid-area: main; grid-row: 2;
  } body > aside, body > article {
    grid-area: main; grid-row: auto;
  } body > nav { position: fixed;
  } body > header, body > footer {
    grid-area: full; grid-row: auto;
  } body > header > * {
    grid-area: app; grid-row: auto;
  } body > footer > * {
    grid-area: main; grid-row: auto;
  } @media  screen and (min-width: 42rem) { /*672px*/
    body > main, body > aside, body > article,
    body > footer > * {
      grid-column: main-left / span 2; grid-row: auto;
    }
    body > footer > address { grid-area: main-left; }
    body > footer > nav { grid-area: main-right; }
  } @media screen and (min-width: 70rem) { /*1120px*/
    body > main > header.hero {
      position: relative; z-index: 1;
      width: calc(150% + (var(--block-spacing)/2));
    }
    body > #site-aside {
      display: flex; flex-direction: column;
      gap: var(--block-spacing);
      grid-area: aside; grid-row: 2;
    } body:has( > main > header.hero ) > aside {
      margin-top: var(--hero-height);
    }
    body > article {grid-column: main-left / span 3; }
    body > footer > nav {
      grid-column: main-right / span 2;
      columns: 2; column-gap: var(--block-spacing);
    }
  }

  body > main:has( > form:only-child ) {
    display: grid; grid-row: auto; grid-area: app;
    margin: var(--block-spacing) calc(var(--block-spacing)*-1);
  }
  body > main > form { padding: var(--block-spacing); }

  header.hero {
    height: var(--hero-height);
    overflow: visible;
  } header.hero::before {
    content: ''; position: absolute; z-index: -1;
    width: 100vw; height: var(--hero-height);
    background: inherit;
  }

  body > article { 
    margin: var(--block-spacing) calc(var(--block-spacing)*-1);
    padding: var(--block-spacing);
  }

  body > main > form { height: 96svh; }