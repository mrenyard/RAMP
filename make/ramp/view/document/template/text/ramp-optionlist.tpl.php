<?php
/**
 * RAMP - Rapid web application development environment for building flexible, customisable web systems.
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; if
 * not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 *
 * @author Matt Renyard (renyard.m@gmail.com)
 * @package RAMP.make
 * @version 0.0.9;
 */
echo "<?php";
?>

/**
 * RAMP - Rapid web application development environment for building flexible, customisable web systems.
 *
 * This program is free software; you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation; either version 2 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; if
 * not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301, USA.
 * 
 * FILE GENERATED BY CODE BASED ON DATA SCHEMA USING RAMP.make
 *
 * @author Matt Renyard (renyard.m@gmail.com)
 * @package RAMP
 * @version 0.0.9;
 */
namespace ramp\model\business;

use ramp\core\Str;
use ramp\core\OptionList;
use ramp\model\business\field\Option;

/**
 * Pre defined enum/list for <?=$this->name; ?>.
 * .
 */
class <?=$this->name; ?> extends OptionList
{
  /**
   * Creates <?=$this->name; ?> option list.
   */
  public function __construct()
  {
    parent::__construct(null, Str::set('\ramp\model\business\field\Option'));
<?php foreach($this->options as $option) { ?>
    $this->add(new Option(<?=$this->name; ?>::<?=$option->ucDescription; ?>(), Str::set('<?=$option->description; ?>')));
<?php } ?>
  }
<?php foreach($this->options as $option) { ?>

    /**
     * Returns the <?=$option->ucDescription; ?> enum of <?=$this->name; ?>.
     * @return int <?=$this->name; ?> '<?=$option->ucDescription; ?>' enum <?=$option->key; ?>

     */
    public static function <?=$option->ucDescription; ?>() : int { return <?=$option->key; ?>; }
<?php } ?>
}
